@{
    ViewBag.Title = "Inicio";
}

<main>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/lucide/0.263.1/lucide.min.js"></script>
    <link rel="stylesheet" href="ruta/a/vision-mission.css">
    <br>
    <br>
    <center>
        <div class="video-container">
            <video autoplay muted loop playsinline>
                <source src="~/Scripts/IMG/108458-680697604.mp4" type="video/mp4" />

                Tu navegador no soporta la etiqueta de video.
            </video>
            <div class="overlay-text">
                <h1>Encuentra todo lo que necesitas al mejor precio</h1>
            </div>
        </div>

    </center>
    <div class="product-season-container my-5">
        <h1 class="product-season-title text-center" style="font-family: Tahoma, Geneva, sans-serif; ">Nuestro inventario</h1>
        <div class="row row-cols-1 row-cols-md-3 g-4">
            <!-- Card Fiesta -->
            <div class="col">
                <div class="product-card text-white">
                    <img src="~/Scripts/IMG/3040757.jpg" class="product-card-img" alt="Celulares" width="350px">
                    <div class="product-card-overlay d-flex flex-column justify-content-end">
                        <h5 class="product-card-title">Celulares</h5>
                        <button class="product-card-btn btn">Ver más</button>
                    </div>
                </div>
            </div>
            <!-- Card Cocina -->
            <div class="col">
                <div class="product-card text-white">
                    <img src="~/Scripts/IMG/cocina.jpeg" class="product-card-img" alt="Cocina" width="350px">
                    <div class="product-card-overlay d-flex flex-column justify-content-end">
                        <h5 class="product-card-title">Cocina</h5>
                        <button class="product-card-btn btn">Ver más</button>
                    </div>
                </div>
            </div>
            <!-- Card Diversión -->
            <div class="col">
                <div class="product-card text-white">
                    <img src="~/Scripts/IMG/office.jpg" class="product-card-img" alt="Oficina" width="350px">
                    <div class="product-card-overlay d-flex flex-column justify-content-end">
                        <h5 class="product-card-title">Oficina</h5>
                        <button class="product-card-btn btn">Ver más</button>
                    </div>
                </div>
            </div>
            <!-- Card Belleza -->
            <div class="col">
                <div class="product-card text-white">
                    <img src="~/Scripts/IMG/electro.jpeg" class="product-card-img" alt="Electrodomésticos" width="470px">
                    <div class="product-card-overlay d-flex flex-column justify-content-end">
                        <h5 class="product-card-title">Electrodomésticos</h5>
                        <button class="product-card-btn btn">Ver más</button>
                    </div>
                </div>
            </div>
            <!-- Card Tecnología -->
            <div class="col">
                <div class="product-card text-white">
                    <img src="~/Scripts/IMG/ferre.jpeg" class="product-card-img" alt="Ferretería" width="350px">
                    <div class="product-card-overlay d-flex flex-column justify-content-end">
                        <h5 class="product-card-title">Ferretería</h5>
                        <button class="product-card-btn btn">Ver más</button>
                    </div>
                </div>
            </div>
            <!-- Card Deporte -->
            <div class="col">
                <div class="product-card text-white">
                    <img src="~/Scripts/IMG/mueble.jpeg" class="product-card-img" alt="Muebles" width="350px">
                    <div class="product-card-overlay d-flex flex-column justify-content-end">
                        <h5 class="product-card-title">Muebles</h5>
                        <button class="product-card-btn btn">Ver más</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Agregar en el head de tu página -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/lucide/0.263.1/lucide.min.js"></script>
    <link rel="stylesheet" href="vision-mission.css">

    <!-- Agregar en el body donde quieras las cards -->
    <div class="vm-container">
        <div class="vm-cards-grid">
            <!-- Card Visión -->
            <div class="vm-card" id="vision-card">
                <div class="vm-icon-container">
                    <div class="vm-icon-wrapper">
                        <i data-lucide="target" class="vm-vision-color"><img src="~/Scripts/IMG/vision.png" width="125px" /></i>
                    </div>
                </div>
                <h3 class="vm-card-title">Nuestra Visión</h3>
                <p class="vm-card-text">
                    Ser la plataforma líder de comercio electrónico en Latinoamérica,
                    reconocida por revolucionar la forma en que las personas compran y
                    venden, brindando una experiencia excepcional y generando un impacto
                    positivo en la vida de millones de usuarios.
                </p>
                <div class="vm-divider vm-vision-divider"></div>
            </div>

            <!-- Card Misión -->
            <div class="vm-card" id="mission-card">
                <div class="vm-icon-container">
                    <div class="vm-icon-wrapper">
                        <i data-lucide="compass" class="vm-mission-color"><img src="~/Scripts/IMG/mision.png" width="125px" /></i>
                    </div>
                </div>
                <h3 class="vm-card-title">Nuestra Misión</h3>
                <p class="vm-card-text">
                    Facilitar el comercio electrónico seguro y eficiente, conectando
                    compradores y vendedores a través de una plataforma innovadora que
                    garantiza transacciones confiables, precios competitivos y una
                    experiencia de usuario excepcional, respaldada por un servicio al
                    cliente de primera clase.
                </p>
                <div class="vm-divider vm-mission-divider"></div>
            </div>
        </div>
    </div>
    <!-- Carrusel Minimalista de Marcas con Botones Laterales -->
    <div id="minimalist-brand-carousel">
        <h2>Distribuidor autorizado de</h2>
        <div class="minimalist-carousel-container">
            <!-- Botón "Prev" a la izquierda -->
            <button class="minimalist-control-button prev-button">&#10094;</button>

            <!-- Pista del carrusel -->
            <div class="minimalist-carousel-track-container">
                <div class="minimalist-carousel-track">
                    <!-- Repite este bloque para cada marca (hasta 15 en total) -->
                    <div class="minimalist-brand-item">
                        <img src="~/Scripts/IMG/Logos/Dell-Logo-2010.png" width="150px" />
                        <button class="minimalist-view-button">Ver</button>
                    </div>
                    <div class="minimalist-brand-item">
                        <img src="~/Scripts/IMG/Logos/descarga (1).png" width="150px" />
                        <button class="minimalist-view-button">Ver</button>
                    </div>
                    <div class="minimalist-brand-item">
                        <img src="~/Scripts/IMG/Logos/descarga.png" width="150px" />
                        <button class="minimalist-view-button">Ver</button>
                    </div>
                    <div class="minimalist-brand-item">
                        <img src="~/Scripts/IMG/Logos/Herman-MIller-Logo-Design.jpg" width="150px" />
                        <button class="minimalist-view-button">Ver</button>
                    </div>
                    <div class="minimalist-brand-item">
                        <img src="~/Scripts/IMG/Logos/HP-Logo.png" width="150px" />
                        <button class="minimalist-view-button">Ver</button>
                    </div>
                    <div class="minimalist-brand-item">
                        <img src="~/Scripts/IMG/Logos/ikea-yellow1340.logowik.com.webp" width="150px" />
                        <button class="minimalist-view-button">Ver</button>
                    </div>
                    <div class="minimalist-brand-item">
                        <img src="~/Scripts/IMG/Logos/kisspng-lg-electronics-logo-lg-g-pro-lite-image-high-defin-1713912331340.webp" width="150px" />
                        <button class="minimalist-view-button">Ver</button>
                    </div>
                    <div class="minimalist-brand-item">
                        <img src="~/Scripts/IMG/Logos/samsung-logo-1993.jpg" width="150px" />
                        <button class="minimalist-view-button">Ver</button>
                    </div>
                    <div class="minimalist-brand-item">
                        <img src="~/Scripts/IMG/Logos/Xiaomi-Logo-2014.png" width="150px" />
                        <button class="minimalist-view-button">Ver</button>
                    </div>
                    <!-- Agrega más elementos hasta 15 -->
                </div>
            </div>

            <!-- Botón "Next" a la derecha -->
            <button class="minimalist-control-button next-button">&#10095;</button>
        </div>
    </div>

    <br />
    <br />
    <br />

    <div class="max-w-sm p-4 bg-white rounded-lg shadow-lg">
        <div class="flex items-center justify-between mb-4">
            <h2 class="text-lg font-semibold text-gray-800">Tipo de Cambio USD/CRC</h2>
            <div id="loadingIndicator" class="hidden">
                <div class="animate-spin rounded-full h-5 w-5 border-b-2 border-gray-900"></div>
            </div>
        </div>

        <div class="grid grid-cols-2 gap-4 mb-4">
            <div class="text-center p-3 bg-gray-50 rounded-lg">
                <div class="text-sm text-gray-600 mb-1">Compra</div>
                <div id="buyRate" class="text-2xl font-bold text-gray-900">---,--</div>
            </div>

            <div class="text-center p-3 bg-gray-50 rounded-lg">
                <div class="text-sm text-gray-600 mb-1">Venta</div>
                <div id="sellRate" class="text-2xl font-bold text-gray-900">---,--</div>
            </div>
        </div>

        <div class="text-sm text-gray-500 text-center">
            Última actualización: <span id="lastUpdated">Cargando...</span>
        </div>

        <div class="mt-4 text-xs text-gray-400 text-center">
            Tipos de cambio según BCCR - Actualización automática cada 5 minutos
        </div>
    </div>
    <div class="comments-container">
        <h2>Deja un Comentario</h2>

        <!-- Formulario para agregar comentarios -->
        <input type="text" id="userNameInput" placeholder="Tu nombre" class="form-input" required>
        <textarea id="commentInput" placeholder="Escribe tu comentario aquí..." class="form-textarea" required></textarea>
        <button onclick="submitComment()" class="btn-primary">Enviar Comentario</button>

        <!-- Contenedor donde se mostrarán los comentarios -->
        <div id="commentsList">
            <!-- Aquí puedes agregar código para listar los comentarios existentes al cargar la página -->
        </div>
    </div>

    <script>
        function submitComment() {
            const userName = document.getElementById("userNameInput").value;
            const content = document.getElementById("commentInput").value;

            if (!userName || !content) {
                alert("Por favor, llena todos los campos antes de enviar el comentario.");
                return;
            }

            $.ajax({
                url: '/Comments/AddComment',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ UserName: userName, Content: content }),
                success: function (response) {
                    alert("Comentario guardado correctamente.");
                    // Lógica para actualizar la lista de comentarios en la interfaz
                    loadComments(); // Llama a esta función para recargar los comentarios
                },
                error: function (xhr, status, error) {
                    console.error("Error al guardar el comentario:", error);
                    alert("Hubo un error al guardar el comentario.");
                }
            });
        }

        // Cargar comentarios y mostrarlos en la interfaz
        function loadComments() {
            $.ajax({
                url: '/Comments/GetComments',
                type: 'GET',
                success: function (comments) {
                    const commentsList = document.getElementById("commentsList");
                    commentsList.innerHTML = ""; // Limpia la lista de comentarios

                    comments.forEach(comment => {
                        const commentElement = document.createElement("div");
                        commentElement.classList.add("comment");
                        commentElement.innerHTML = `<strong>${comment.UserName}</strong>: ${comment.Content} <br> <small>${new Date(comment.DateCreated).toLocaleString()}</small>`;
                        commentsList.appendChild(commentElement);
                    });
                },
                error: function (xhr, status, error) {
                    console.error("Error al cargar comentarios:", error);
                }
            });
        }

        // Llama a loadComments para cargar los comentarios al cargar la página
        document.addEventListener("DOMContentLoaded", function () {
            loadComments();
        });
    </script>

    <style>
        .comments-container {
            max-width: 600px;
            margin: 2rem auto;
            padding: 1.5rem;
            border: 1px solid #ddd;
            border-radius: 8px;
            background-color: #f9f9f9;
        }

        .form-input, .form-textarea {
            width: 100%;
            padding: 0.75rem;
            margin-bottom: 0.5rem;
            border-radius: 4px;
            border: 1px solid #ddd;
        }

        .btn-primary {
            background-color: #4F46E5;
            color: #FFFFFF;
            padding: 0.75rem;
            border-radius: 8px;
            font-weight: bold;
            cursor: pointer;
            width: 100%;
        }

        .comment {
            margin-top: 1rem;
            padding: 0.5rem;
            border-bottom: 1px solid #ddd;
        }
    </style>

    <script>
        const ExchangeRateUpdater = {
            init: function () {
                this.updateExchangeRate();
                this.setupEventListeners();
                this.startAutoUpdate();
            },

            updateExchangeRate: function () {
                const loadingIndicator = document.getElementById('loadingIndicator');
                if (loadingIndicator) {
                    loadingIndicator.classList.remove('hidden');
                }

                // Cambia la URL de la API al endpoint que estés utilizando o a una API pública
                fetch('https://api.exchangerate-api.com/v4/latest/USD') // API pública de ejemplo
                    .then(response => response.json())
                    .then(data => {
                        const buyRate = data.rates.CRC; // Tipo de cambio en colones costarricenses
                        const sellRate = buyRate * 1.02; // Ejemplo: la venta se calcula con un margen de 2%

                        this.updateDisplay({
                            buyRate: buyRate.toFixed(2),
                            sellRate: sellRate.toFixed(2),
                            lastUpdated: new Date().toLocaleString() // Muestra la hora actualizada
                        });
                    })
                    .catch(error => {
                        console.error('Error al actualizar tipo de cambio:', error);
                    })
                    .finally(() => {
                        if (loadingIndicator) {
                            loadingIndicator.classList.add('hidden');
                        }
                    });
            },

            updateDisplay: function (data) {
                const elements = {
                    buyRate: document.getElementById('buyRate'),
                    sellRate: document.getElementById('sellRate'),
                    lastUpdated: document.getElementById('lastUpdated')
                };

                if (elements.buyRate) elements.buyRate.textContent = `₡${data.buyRate}`;
                if (elements.sellRate) elements.sellRate.textContent = `₡${data.sellRate}`;
                if (elements.lastUpdated) elements.lastUpdated.textContent = data.lastUpdated;
            },

            setupEventListeners: function () {
                // Actualizar cuando la pestaña vuelve a estar activa
                document.addEventListener('visibilitychange', () => {
                    if (document.visibilityState === 'visible') {
                        this.updateExchangeRate();
                    }
                });
            },

            startAutoUpdate: function () {
                // Actualizar cada 5 minutos
                setInterval(() => this.updateExchangeRate(), 300000);
            }
        };

        // Inicializar cuando el DOM esté listo
        document.addEventListener('DOMContentLoaded', () => {
            ExchangeRateUpdater.init();
        });
    </script>


    <style>
        /* Contenedor del carrusel */
        #minimalist-brand-carousel {
            text-align: center;
            max-width: 720px;
            margin: 0 auto;
        }

            #minimalist-brand-carousel h2 {
                font-size: 1.2rem;
                color: #333;
                margin-bottom: 15px;
            }

        /* Contenedor y pista del carrusel */
        .minimalist-carousel-container {
            position: relative;
            display: flex;
            align-items: center;
        }

        .minimalist-carousel-track-container {
            overflow: hidden;
            width: 100%;
        }

        .minimalist-carousel-track {
            display: flex;
            transition: transform 0.4s ease;
            gap: 20px;
        }

        /* Elementos del carrusel */
        .minimalist-brand-item {
            flex: 0 0 220px; /* Ajusta para cambiar el tamaño del elemento */
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 15px;
            background: #f5f5f5;
            border: 1px solid #ddd;
            border-radius: 8px;
            transition: box-shadow 0.3s ease;
        }

            .minimalist-brand-item:hover {
                box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
            }

            .minimalist-brand-item img {
                max-width: 100px;
                margin-bottom: 10px;
            }

        /* Botón "Ver" */
        .minimalist-view-button {
            padding: 8px 12px;
            background: #007bff;
            border: none;
            border-radius: 5px;
            font-size: 0.85rem;
            color: #fff;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

            .minimalist-view-button:hover {
                background: #0056b3;
            }

        /* Controles del carrusel - Botones laterales */
        /* Controles del carrusel - Botones laterales */
        .minimalist-control-button {
            background: #333; /* Cambia a un color oscuro para contraste */
            border: none;
            color: #fff;
            font-size: 1.5rem;
            padding: 10px 15px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            border-radius: 8px; /* Agrega borde redondeado */
        }

            .minimalist-control-button:hover {
                background: #555; /* Color de fondo más claro al pasar el ratón */
            }


        .prev-button {
            left: -50px; /* Ajusta la distancia desde el borde izquierdo */
        }

        .next-button {
            right: -30px; /* Ajusta la distancia desde el borde derecho */
        }
    </style>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const track = document.querySelector('.minimalist-carousel-track');
            const items = document.querySelectorAll('.minimalist-brand-item');
            const prevButton = document.querySelector('.prev-button');
            const nextButton = document.querySelector('.next-button');

            let currentIndex = 0;
            const itemsVisible = 3; // Cambia el número de elementos visibles aquí
            const itemWidth = items[0].offsetWidth + 20; // Ancho de cada elemento + espacio entre ellos

            function updateCarouselPosition() {
                const newPosition = -(currentIndex * itemWidth);
                track.style.transform = `translateX(${newPosition}px)`;
            }

            prevButton.addEventListener('click', () => {
                currentIndex = (currentIndex > 0) ? currentIndex - 1 : items.length - itemsVisible;
                updateCarouselPosition();
            });

            nextButton.addEventListener('click', () => {
                currentIndex = (currentIndex < items.length - itemsVisible) ? currentIndex + 1 : 0;
                updateCarouselPosition();
            });
        });


    </script>
    <style>
        /* Prefijo 'vm-' añadido a todas las clases para evitar conflictos */
        .vm-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }

        .vm-cards-grid {
            display: grid;
            grid-template-columns: 1fr;
            gap: 2rem;
        }


        .vm-card {
            background: white;
            padding: 2rem;
            border-radius: 1rem;
            box-shadow: 10px 10px 20px rgba(163,177,198,0.3), -10px -10px 20px rgba(255,255,255,0.8);
            transition: all 0.3s ease;
        }

            .vm-card:hover {
                transform: translateY(-8px);
            }

        .vm-icon-container {
            display: flex;
            justify-content: center;
            margin-bottom: 1.5rem;
        }

        .vm-icon-wrapper {
            padding: 1rem;
            background: white;
            border-radius: 50%;
            box-shadow: 6px 6px 12px rgba(163,177,198,0.3), -6px -6px 12px rgba(255,255,255,0.8);
        }

            .vm-icon-wrapper svg {
                width: 40px;
                height: 40px;
                transition: transform 0.3s ease;
            }

        .vm-card:hover .vm-icon-wrapper svg {
            transform: scale(1.1);
        }

        .vm-card-title {
            font-family: 'Poppins', sans-serif;
            font-size: 1.5rem;
            font-weight: 600;
            color: #1a1a1a;
            text-align: center;
            margin-bottom: 1rem;
            letter-spacing: -0.5px;
        }

        .vm-card-text {
            color: #666;
            text-align: center;
            line-height: 1.6;
            margin-bottom: 1.5rem;
            font-family: 'SF Pro Display', -apple-system, BlinkMacSystemFont, sans-serif;
        }

        .vm-divider {
            width: 4rem;
            height: 4px;
            border-radius: 2px;
            margin: 0 auto;
            opacity: 0.75;
        }

        .vm-vision-color {
            color: #2563eb;
        }

        .vm-mission-color {
            color: #16a34a;
        }

        .vm-vision-divider {
            background-color: #2563eb;
        }

        .vm-mission-divider {
            background-color: #16a34a;
        }
    </style>
    <script>
        // Esperar a que el DOM esté completamente cargado
        document.addEventListener('DOMContentLoaded', function () {
            // Inicializar los iconos de Lucide
            lucide.createIcons();

            // Añadir animaciones y efectos adicionales
            document.querySelectorAll('.vm-card').forEach(card => {
                card.addEventListener('mouseenter', () => {
                    const icon = card.querySelector('svg');
                    if (icon) {
                        icon.style.transform = 'scale(1.1)';
                    }
                });

                card.addEventListener('mouseleave', () => {
                    const icon = card.querySelector('svg');
                    if (icon) {
                        icon.style.transform = 'scale(1)';
                    }
                });
            });
        });
    </script>
    <script src="ruta/a/vision-mission.js"></script>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
    <style>
        :root {
            /* Variables actualizadas para un look más moderno */
            --background: #ffffff;
            --card-bg: #ffffff;
            --text-color: #2a2a2a;
            --shadow-dark: rgba(163, 177, 198, 0.3);
            --shadow-light: rgba(255, 255, 255, 0.8);
            --btn-hover: #fafafa;
            --title-color: #1a1a1a;
            --overlay-gradient: linear-gradient( 145deg, rgba(255, 255, 255, 0.9), rgba(255, 255, 255, 0.7) );
        }

        /* Título principal con tipografía moderna y efecto 3D mejorado */
        .product-season-title {
            font-family: 'Poppins', 'SF Pro Display', -apple-system, BlinkMacSystemFont, sans-serif;
            font-size: 2.5em;
            font-weight: 600;
            letter-spacing: -0.5px;
            color: var(--title-color);
            background-color: var(--card-bg);
            padding: 20px 25px;
            border-radius: 16px;
            text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.1), -1px -1px 1px rgba(255, 255, 255, 0.7);
            box-shadow: 6px 6px 12px var(--shadow-dark), -6px -6px 12px var(--shadow-light);
            transition: all 0.3s ease;
        }

        /* Cards de productos con sombras neumórficas mejoradas */
        .product-card {
            border: none;
            border-radius: 20px;
            overflow: hidden;
            transition: all 0.3s ease;
            position: relative;
            background: var(--card-bg);
            box-shadow: 10px 10px 20px var(--shadow-dark), -10px -10px 20px var(--shadow-light);
        }

        /* Título de card actualizado */
        .product-card-title {
            font-family: 'Poppins', 'SF Pro Display', -apple-system, BlinkMacSystemFont, sans-serif;
            font-size: 1.8em;
            font-weight: 600;
            letter-spacing: -0.3px;
            color: var(--text-color);
            text-shadow: 2px 2px 4px rgba(255, 255, 255, 0.1), -1px -1px 1px rgba(0, 0, 0, 0.05);
            transform: translateZ(20px);
            margin-bottom: 15px;
        }

        /* Overlay actualizado para fondo claro */
        .product-card-overlay {
            background: var(--overlay-gradient);
            border-radius: 15px;
            padding: 25px;
            backdrop-filter: blur(5px);
        }

        /* Botón modernizado */
        .product-card-btn {
            font-family: 'Poppins', 'SF Pro Display', -apple-system, BlinkMacSystemFont, sans-serif;
            font-size: 0.95em;
            font-weight: 500;
            padding: 12px 28px;
            border-radius: 30px;
            background: var(--card-bg);
            color: var(--text-color);
            transition: all 0.3s ease;
            box-shadow: 6px 6px 12px var(--shadow-dark), -6px -6px 12px var(--shadow-light);
            letter-spacing: 0.3px;
        }

            .product-card-btn:hover {
                background: var(--btn-hover);
                box-shadow: inset 4px 4px 8px var(--shadow-dark), inset -4px -4px 8px var(--shadow-light);
                transform: translateY(2px);
            }

        /* Mejora del contenedor de imagen */
        .product-card-img-container {
            position: relative;
            border-radius: 15px;
            overflow: hidden;
            box-shadow: inset 3px 3px 6px var(--shadow-dark), inset -3px -3px 6px var(--shadow-light);
        }

        /* Ajuste de la imagen */
        .product-card-img {
            filter: brightness(95%);
            transition: all 0.4s ease;
            height: 100%;
            object-fit: cover;
            transform: scale(1.01);
        }

        .product-card:hover {
            transform: translateY(-8px);
            box-shadow: 12px 12px 24px var(--shadow-dark), -12px -12px 24px var(--shadow-light);
        }

            .product-card:hover .product-card-img {
                filter: brightness(85%);
                transform: scale(1.04);
            }
    </style>
    <style>
        /* ... (existing styles) ... */

        .login-register-btn {
            padding: 8px 16px;
            border-radius: 20px;
            font-weight: bold;
            transition: all 0.3s ease;
        }

        .login-btn {
            background-color: #3498db;
            color: white;
            border: 2px solid #3498db;
        }

            .login-btn:hover {
                background-color: white;
                color: #3498db;
            }

        .register-btn {
            background-color: #2ecc71;
            color: white;
            border: 2px solid #2ecc71;
        }

            .register-btn:hover {
                background-color: white;
                color: #2ecc71;
            }

        .modal-header {
            background-color: #f8f9fa;
            border-bottom: 1px solid #dee2e6;
        }

        .modal-footer {
            background-color: #f8f9fa;
            border-top: 1px solid #dee2e6;
        }

        .carousel-control-prev,
        .carousel-control-next {
            background-color: rgba(0,0,0,0.5);
            width: 40px;
            height: 40px;
            border-radius: 50%;
            top: 50%;
            transform: translateY(-50%);
        }

        .carousel-control-prev {
            left: -20px;
        }

        .carousel-control-next {
            right: -20px;
        }

        .button {
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 10px 15px;
            gap: 15px;
            background-color: #2ecc71; /* Color verde */
            outline: 3px #2ecc71 solid;
            outline-offset: -3px;
            border-radius: 5px;
            border: none;
            cursor: pointer;
            transition: 400ms;
        }

            .button .text {
                color: white;
                font-weight: 700;
                font-size: 1em;
                transition: 400ms;
                margin-bottom: 0;
            }

            .button svg path {
                transition: 400ms;
            }

            .button:hover {
                background-color: transparent;
            }

                .button:hover .text {
                    color: #2ecc71; /* Color verde */
                }

                .button:hover svg path {
                    fill: #2ecc71; /* Color verde */
                }

        .section-title {
            margin: 40px 0 20px;
            text-align: center;
            font-size: 2em;
            font-weight: bold;
        }

        .carousel-control-prev:hover,
        .carousel-control-next:hover {
            background-color: gold; /* Color dorado */
        }



        /* Modal styles */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            z-index: 1100; /* Increase the z-index to make the modal appear on top */
            background-color: rgba(0, 0, 0, 0.5);
        }

            .modal.show {
                display: block;
            }

        .modal-dialog {
            max-width: 400px;
            margin: 40px auto;
        }

        .modal-content {
            background-color: #f9f9f9;
            border: 1px solid #ddd;
            border-radius: 5px;
            padding: 20px;
        }

        .modal-header {
            background-color: #f8f9fa;
            border-bottom: 1px solid #dee2e6;
            padding: 10px;
        }

        .modal-title {
            font-weight: bold;
        }

        .modal-body {
            padding: 20px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 10px;
        }

        input[type="email"],
        input[type="password"],
        input[type="text"] {
            width: 100%;
            padding: 10px;
            margin-bottom: 20px;
            border: 1px solid #ccc;
        }

        button[type="submit"] {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

            button[type="submit"]:hover {
                background-color: #3e8e41;
            }
    </style>
    <style>
        .video-container {
            position: relative;
            width: 60%;
            height: auto;
            overflow: hidden;
            border-radius: 50px;
            cursor: pointer; /* Mostrar un puntero de mano cuando se haga hover en el contenedor */
        }

            .video-container video {
                width: 100%;
                height: auto;
                object-fit: cover;
            }

        .overlay-text {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            color: white;
            font-size: 24px;
            font-weight: bold;
            text-align: center;
            background-color: rgba(0, 0, 0, 0.5); /* Fondo oscuro semi-transparente */
            padding: 20px;
            border-radius: 10px;
            opacity: 0;
            transition: opacity 0.5s ease;
            pointer-events: none; /* Desactiva la capacidad de hacer clic en el texto */
        }

        /* El texto aparecerá cuando se haga hover o toque el video */
        .video-container:hover .overlay-text,
        .video-container:active .overlay-text {
            opacity: 1;
        }

        /* Ajustes para pantallas más pequeñas */
        @@media (max-width: 576px) {
            .video-container {
                width: 90%; /* Aumentar el ancho para dispositivos móviles */
            }

            .overlay-text {
                font-size: 20px; /* Reducir el tamaño de la fuente para pantallas medianas */
                padding: 15px; /* Ajustar el padding */
            }
        }

        /* Ajustes para pantallas muy pequeñas (teléfonos) */
        @@media (max-width: 480px) {
            .video-container {
                width: 100%; /* Usar el 100% del ancho en teléfonos */
            }

            .overlay-text {
                font-size: 16px; /* Reducir aún más el tamaño de la fuente */
                padding: 10px; /* Reducir el padding en pantallas pequeñas */
            }
        }
    </style>

    <!-- Sección de Celulares -->

    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            margin: 0;
            padding: 0;
        }

        /* Botón de Chatbot */
        .chatbot-logo {
            position: fixed;
            bottom: 20px;
            right: 20px;
            z-index: 1000;
            cursor: pointer;
        }

            .chatbot-logo img {
                width: 60px;
                height: 60px;
                border-radius: 50%;
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
                transition: transform 0.3s ease;
            }

                .chatbot-logo img:hover {
                    transform: scale(1.1);
                }

        /* Contenedor del Chatbot */
        .chatbot-container {
            display: none;
            position: fixed;
            bottom: 80px;
            right: 20px;
            width: 350px;
            height: 400px;
            background-color: #f5f5f5;
            border: 1px solid #ddd;
            border-radius: 15px;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
            z-index: 1001;
            flex-direction: column;
        }

        .chatbot-header {
            background-color: #87898b;
            color: white;
            padding: 15px;
            text-align: center;
            font-weight: bold;
            border-top-left-radius: 15px;
            border-top-right-radius: 15px;
            position: relative;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .close-btn {
            position: absolute;
            top: 12px;
            right: 12px;
            background: none;
            border: none;
            color: white;
            font-size: 20px;
            cursor: pointer;
        }

            .close-btn:hover {
                color: #ff0000;
            }

        .chatbot-messages {
            flex-grow: 1;
            padding: 10px;
            overflow-y: auto;
            background-color: #fafafa;
        }

        .message {
            padding: 12px;
            margin-bottom: 10px;
            border-radius: 15px;
            max-width: 75%;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
        }

        .bot-message {
            background-color: #e9ecef;
            align-self: flex-start;
        }

        .user-message {
            background-color: #636363;
            color: white;
            align-self: flex-end;
        }

        .chatbot-input {
            display: flex;
            border-top: 1px solid #ddd;
            background-color: #ffffff;
        }

            .chatbot-input input {
                flex-grow: 1;
                padding: 10px;
                border: none;
                font-size: 16px;
            }

            .chatbot-input button {
                background-color: #007bff;
                color: white;
                border: none;
                padding: 10px 15px;
                cursor: pointer;
            }
    </style>
    </head>
    <body>
        <!-- Botón del Chatbot -->
        <div class="chatbot-logo" onclick="toggleChatbot()">
            <img src="~/Scripts/IMG/R.png" alt="Chatbot Soporte Técnico">
        </div>

        <!-- Contenedor del Chatbot -->
        <div class="chatbot-container" id="chatbot">
            <div class="chatbot-header">
                Soporte Técnico - Compralo.com
                <button class="close-btn" onclick="toggleChatbot()">X</button>
            </div>
            <div class="chatbot-messages" id="chatbot-messages"></div>
            <div class="chatbot-input">
                <input type="text" id="chatbot-input" placeholder="Escribe tu pregunta..." onkeypress="handleKeyPress(event)">
                <button onclick="sendMessage()">Enviar</button>
            </div>
        </div>

        <script>
            // Mostrar/ocultar chatbot con mensaje de bienvenida inicial
            function toggleChatbot() {
                const chatbot = document.getElementById('chatbot');
                const chatbotMessages = document.getElementById('chatbot-messages');
                if (chatbot.style.display === 'none' || chatbot.style.display === '') {
                    chatbot.style.display = 'flex';

                    // Limpiar mensajes anteriores y mostrar el mensaje de bienvenida
                    chatbotMessages.innerHTML = '';
                    addMessage('¡Hola! Soy el asistente virtual de Compralo.com. Aquí tienes algunos comandos que puedes utilizar:', 'bot-message');
                    addMessage('- "Problemas con mi contraseña" para ayuda con login.', 'bot-message');
                    addMessage('- "Estado de mi pedido" para consultar tus pedidos.', 'bot-message');
                    addMessage('- "Devolución" para información sobre devoluciones.', 'bot-message');
                    addMessage('- "Contacto" para saber cómo comunicarte con soporte.', 'bot-message');
                } else {
                    chatbot.style.display = 'none';
                }
            }

            // Función para manejar el envío de mensajes
            function sendMessage() {
                const inputField = document.getElementById('chatbot-input');
                const userMessage = inputField.value.trim();
                if (userMessage === '') return;

                // Mostrar mensaje del usuario
                addMessage(userMessage, 'user-message');

                // Generar respuesta automática basada en palabras clave
                const botResponse = getBotResponse(userMessage);
                setTimeout(() => {
                    addMessage(botResponse, 'bot-message');
                }, 600);  // Simulación de tiempo de respuesta

                // Limpiar campo de entrada
                inputField.value = '';
            }

            // Función para detectar la tecla Enter y enviar mensaje
            function handleKeyPress(event) {
                if (event.key === 'Enter') {
                    sendMessage();
                }
            }

            // Añadir mensaje al contenedor de mensajes
            function addMessage(message, className) {
                const messageContainer = document.getElementById('chatbot-messages');
                const newMessage = document.createElement('div');
                newMessage.classList.add('message', className);
                newMessage.innerText = message;
                messageContainer.appendChild(newMessage);

                // Scroll al final de la conversación
                messageContainer.scrollTop = messageContainer.scrollHeight;
            }

            // Respuesta automática basada en palabras clave
            function getBotResponse(message) {
                message = message.toLowerCase();

                // Detección de palabras clave y respuestas automáticas
                if (message.includes('iniciar sesión') || message.includes('contraseña')) {
                    return 'Si tienes problemas para iniciar sesión, intenta restablecer tu contraseña desde la opción "Olvidé mi contraseña".';
                } else if (message.includes('pedido') || message.includes('estado') || message.includes('paquete')) {
                    return 'Para consultar el estado de tu pedido, ingresa a "Mi cuenta" y selecciona la opción "Mis pedidos".';
                } else if (message.includes('devolución') || message.includes('producto defectuoso')) {
                    return 'Para realizar una devolución, ve a "Mi cuenta" > "Mis pedidos" > "Solicitar devolución". Recuerda que tienes 30 días para devolver tu producto.';
                } else if (message.includes('contactar') || message.includes('teléfono') || message.includes('soporte')) {
                    return 'Puedes contactar con nuestro soporte técnico al 1-800-SOPORTE o enviarnos un mensaje a soporte@compralo.com.';
                } else {
                    return 'No estoy seguro de entender tu pregunta. Por favor, intenta ser más específico o consulta nuestra sección de Preguntas Frecuentes.';
                }
            }
        </script>

        <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>


</main>